{"version":3,"sources":["services/puhelinluettelo.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PhonebookList","persons","filter","handleDelete","filteredNames","filt","person","name","includes","console","log","map","key","number","onClick","e","Filtering","setFilter","className","value","onChange","event","target","PersonForm","newName","newNumber","handleTypingName","handleTypingNumber","handleAddPerson","style","margin","onSubmit","type","Notification","message","App","useState","setNewName","setNewNumber","setPersons","errorMessage","setErrorMessage","useEffect","puhelinluetteloService","preventDefault","newPerson","updateThisPerson","find","x","window","confirm","updatedPerson","setTimeout","catch","error","length","alert","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb587b1d.chunk.js","sourcesContent":["import axios from 'axios'  \r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const persons = request.then(response => response.data)\r\n    return persons\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    const updatedPerson = request.then(response => response.data)\r\n    return updatedPerson\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\r\nimport puhelinluetteloService from './services/puhelinluettelo'\r\n\r\nconst PhonebookList = ({persons, filter, handleDelete}) => {\r\n  const filteredNames = persons\r\n  const filt = filter\r\n\r\n  if (filter !== \"\") { //filteriin taitaa mennä jtn ennen kuin kaatuu, koska pääsee 7:aan\r\n    const filteredNames = persons.filter(person => (person.name.includes(filt)))\r\n    console.log(filteredNames)\r\n    return (\r\n      <ul>\r\n        {filteredNames.map(person => \r\n        <li key={person.id} >{person.name} {person.number} \r\n          <button onClick={ (e) => handleDelete(person.id, e)}> delete </button> \r\n        </li> )}\r\n      </ul>\r\n    )\r\n  }\r\n  //Jos ei haluta filtteröidä = näytä kaikki.\r\n  else { \r\n    console.log(filteredNames)\r\n    return (\r\n      <ul> \r\n        { filteredNames.map(person => \r\n            <li key={person.id} >{person.name} {person.number} \r\n              <button onClick={ (e) => handleDelete(person.id, e)}> delete </button>\r\n            </li> \r\n        )}\r\n      </ul>\r\n      )\r\n  }\r\n}\r\n\r\nconst Filtering = ({filter, setFilter}) => {\r\n\r\n  const handleTypingFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n  <div>\r\n\r\n        show contacts with:  \r\n          <input className='inputField'\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={handleTypingFilter}\r\n          />\r\n  </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({newName, newNumber, handleTypingName, handleTypingNumber, handleAddPerson}) => { \r\n  return (\r\n  <form style={{margin: 10}} onSubmit={handleAddPerson}>\r\n      <div>\r\n        name: <input className='inputField' //input, ja sit sitä händläillään\r\n          name=\"name\"\r\n          value={newName}\r\n          onChange={handleTypingName}/>\r\n      </div>\r\n      <div>\r\n        number: <input className='inputField'\r\n          name=\"number\" \r\n          value={newNumber}\r\n          onChange={handleTypingNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n} \r\n\r\nconst Notification = ({ message }) => {\r\n  if (message == null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ persons, setPersons ] = useState( [] )\r\n  const [ errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    puhelinluetteloService\r\n      //.get('http://localhost:3001/persons')\r\n      .getAll()\r\n      .then(response => {\r\n        console.log(response)\r\n        setPersons(response)\r\n      })\r\n  }, [])\r\n\r\n  // tee uus handleDelete\r\n  // src/servicesiin pitää tehdä http update\r\n  // syötä tää setti button onClickille \r\n\r\n\r\n\r\n  const handleDelete = (id, event) => {\r\n    const answer = window.confirm(\"You sure u wanna do this?\")\r\n    if (answer) {\r\n      console.log(\"farewell firewall honey\", id)\r\n      event.preventDefault(event)\r\n      puhelinluetteloService\r\n      .deletePerson(id)\r\n      .then(response => {\r\n        setErrorMessage(\r\n          `That dude was deleted.`\r\n        )\r\n        console.log(\"reesponse\", response)\r\n        console.log(\"errorMessage\", errorMessage)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 3000)\r\n        \r\n        setPersons(persons.filter(person => person.id !== id))\r\n      \r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n         `(S)he was already removed from the server`  //'${response.name}'\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 3000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleAddPerson = (event) => { // handler\r\n    event.preventDefault()\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    \r\n    // tää tyyppi on jo olemassa for sure, eli nyt sit vaa päivitä nro\r\n    // if on olemassa update, else add\r\n\r\n    if (persons.map(person => person.name).includes(newName)) {\r\n      const updateThisPerson = persons.find(x => x.name === newName)\r\n      console.log(\"updated Person\", newPerson)\r\n      const answer = window.confirm(`${newName} exists already. Would you like to update the number?`)\r\n        if (answer) {\r\n          puhelinluetteloService\r\n            .update(updateThisPerson.id, newPerson)\r\n            .then( updatedPerson => {\r\n              setErrorMessage(\r\n                `Contact details of '${newName}' have been updated.` //'${response.name}'\r\n              )\r\n              console.log(\"hey\")\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 3000)\r\n              setPersons(persons.map(person => person.name !== newName ? person : updatedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                `Failed to update contact details.`\r\n              )\r\n            })\r\n        }\r\n      return (\r\n        console.log(\"sup\")\r\n        )\r\n    }\r\n    else if (newNumber.length <= 1) {\r\n      return (window.alert(`Please, give ${newName} an appropriate phone number!`))\r\n    }\r\n    else {\r\n      puhelinluetteloService\r\n        .create(newPerson)\r\n        .then(response => {\r\n          setPersons(persons.concat(response))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setErrorMessage(\r\n            `'${response.name}' has been added.`\r\n          )\r\n          console.log(\"response\", response)\r\n          console.log(\"errorMessage\", errorMessage)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 3000)\r\n        })\r\n        .catch(error => {\r\n          console.log(\"ouch honey, u missed sth now\")\r\n          setErrorMessage(\r\n            `'${error.response.data.error}'`\r\n          )\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 3000)\r\n        })\r\n    \r\n  }\r\n}\r\n\r\n  const handleTypingName = (event) => (setNewName(event.target.value))\r\n  const handleTypingNumber = (event) => (setNewNumber(event.target.value))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n        <Notification message={errorMessage} />\r\n        <Filtering filter={filter} setFilter={(e) => setFilter(e)}/>\r\n      <h2>Add a New Contact</h2>\r\n        <PersonForm newName={newName} newNumber={newNumber} handleTypingName={handleTypingName} handleTypingNumber={handleTypingNumber} handleAddPerson={handleAddPerson} />\r\n      <h2>Numbers</h2>\r\n        <PhonebookList persons={persons} filter={filter} handleDelete={handleDelete}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}